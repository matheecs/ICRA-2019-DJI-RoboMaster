<launch>
  <master auto="start"/>
    <arg name="map" value="icra2019"/>
    <arg name="map_decision" value="icra2019_decision"/>
    <node name="master_discovery" pkg="master_discovery_fkie" type="master_discovery">
        <param name="mcast_group" value="224.0.0.1"/>
    </node>

    <node name="master_sync" pkg="master_sync_fkie" type="master_sync">
        <!-- Since version 0.7.4:
          For all sync_* and ignore_* parameter you can use follow structure to define filter for specific hosts:
          <rosparam param="sync_topics">
              - hostname:
                - filter
          </rosparam>
        -->

        <!-- The list of topics, which are to be ignored while a synchroniation. The ~ignore_nodes list is processed first.
        These are defaults and cannot be removed: ['/rosout', '/rosout_agg'] -->
        <rosparam param="sync_topics">
            [/master/goal_task,/wing/goal_task
            ]
        </rosparam>
        <rosparam param="ignore_services">[/*]</rosparam>
    </node>

<!--    <rosparam file="$(find roborts_base)/config/test_refree_parameter.yaml" command="load" ns="roborts_base"/> -->
<!--    <node pkg="roborts_base" type="test_refree_node" name="test_refree_node" output="screen"/> -->

    <group ns="master">

        <!-- Run the robot sdk interface -->
        <include file="$(find roborts_bringup)/launch/base.launch" />

        <!-- Publish static tf -->
        <include file="$(find roborts_bringup)/launch/static_tf.launch" />

        <!-- Run the map server -->
        <node name="map_server" pkg="map_server" type="map_server" args="$(find roborts_bringup)/maps/$(arg map).yaml" respawn="false" />
        <node name="map_server_decision" pkg="map_server" type="map_server" args="$(find roborts_bringup)/maps/$(arg map_decision).yaml" respawn="false"/>
        <!-- Run the lidar node -->
        <node name="rplidar_node" pkg="rplidar_ros" type="rplidarNode" output="screen">
            <param name="serial_port" type="string" value="/dev/rplidar"/>
            <param name="serial_baudrate" type="int" value="115200"/>
            <param name="frame_id" type="string" value="base_laser_link"/>
            <param name="inverted" type="bool" value="false"/>
            <param name="angle_compensate" type="bool" value="true"/>
        </node>

        <!-- Run the localization node -->
        <include file="$(find roborts_localization)/launch/roborts_localization.launch" />

        <!-- Run the global planner node -->
        <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="true" />

        <!-- Run the local planner node -->
        <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="true" />
        <include file="$(find robots_detection)/launch/robots_detection.launch" />

        <include file="$(find sub_cam)/launch/sub_cam.launch" />

        <include file="$(find apriltags2_ros)/launch/continuous_detection.launch" />

        <include file="$(find leonard_decision)/launch/end.launch" />


        <!-- Run the rviz -->
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find roborts_bringup)/rviz/roborts.rviz" />
    </group>

</launch>
